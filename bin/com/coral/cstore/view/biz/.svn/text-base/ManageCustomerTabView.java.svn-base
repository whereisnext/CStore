/**
 * 
 */
package com.coral.cstore.view.biz;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.CTabFolder;
import org.eclipse.swt.custom.CTabItem;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.layout.RowData;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.Text;

import com.coral.cstore.CStore;
import com.coral.cstore.IView;
import com.coral.cstore.Style;
import com.coral.cstore.utils.LayoutUtils;
import com.coral.cstore.utils.WidgetUtils;
import com.coral.cstore.view.ViewList;

/**
 * @author coral.ma
 *
 */
public class ManageCustomerTabView implements IView {
	
	CTabItem item;
	
	Button createBtn;
	Button updateBtn;
	Button deleteBtn;
	Button searchBtn;
	Button showAllBtn;
//	tab.customer.customerName
	private static final String[] columnNames = {CStore.getResourceString("tab.customer.customerName"),
		CStore.getResourceString("tab.customer.contectPerson"),
		CStore.getResourceString("tab.customer.mobile"),
		CStore.getResourceString("tab.customer.phone"),
		CStore.getResourceString("tab.customer.address"),
		CStore.getResourceString("tab.customer.fax"),
		CStore.getResourceString("tab.customer.accountBank"),
		CStore.getResourceString("tab.customer.accountNumber"),
		CStore.getResourceString("tab.customer.accountPerson"),
		CStore.getResourceString("tab.customer.mark"),};
	
	public CTabItem asTabView(CTabFolder tabFolder) {
		item = WidgetUtils.createClosableCTabItem(tabFolder, CStore.getResourceString("tab.mangCustomer"));
		item.setData(ViewList.viewName, viewName());
		item.setControl(getCompositePage(tabFolder,null));
		return item;
	}
	
	public Composite getCompositePage(Composite parent, String pageId) {
		GridLayout gridLayout = new GridLayout(12,true);
		Style.gridLayoutUtils(gridLayout);
		
		Composite composite = new Composite(parent,SWT.NONE);
		composite.setLayout(gridLayout);
		composite.setBackground(Style.white);

		GridData labelGD = new GridData(GridData.FILL, GridData.BEGINNING, true, false);
		labelGD.horizontalSpan=12;
		Label label = WidgetUtils.createTitleLabel(composite, CStore.getResourceString("tab.mangCustomer.label"));
		label.setLayoutData(labelGD);
		
		GridData descData = new GridData(GridData.BEGINNING, GridData.BEGINNING, true, false);
		descData.horizontalSpan=12;
		Label descLabel = WidgetUtils.createDescriptionLabel(composite, CStore.getResourceString("tab.mangCustomer.description"));
		descLabel.setLayoutData(descData);

		// controller of table.
		GridData btnGD = LayoutUtils.createBETFGridData(4);
		Composite btnComposite = LayoutUtils.createRowComposite(composite);
		btnComposite.setLayoutData(btnGD);
		createBtn = WidgetUtils.createButton(btnComposite, CStore.getResourceString("tab.mangCustomer.createBtn"));
		updateBtn = WidgetUtils.createButton(btnComposite, CStore.getResourceString("tab.mangCustomer.updateBtn"));
		deleteBtn = WidgetUtils.createButton(btnComposite, CStore.getResourceString("tab.mangCustomer.deleteBtn"));

		GridData emptyGD = LayoutUtils.createEETFGridData(2);
		Label el = WidgetUtils.createEmptyLabel(composite);
		el.setLayoutData(emptyGD);
		
		GridData searchInputGD = LayoutUtils.createEETFGridData(6);
		Composite searchComposite = LayoutUtils.createRowComposite(composite);
		searchComposite.setLayoutData(searchInputGD);
		RowData textData = new RowData();
		textData.width=200;
		Text searchText = WidgetUtils.createText(searchComposite);
		searchText.setLayoutData(textData);
		searchBtn = WidgetUtils.createButton(searchComposite, CStore.getResourceString("tab.mangCustomer.searchBtn"));
		showAllBtn = WidgetUtils.createButton(searchComposite, CStore.getResourceString("tab.mangCustomer.showAllBtn"));

		
		// create customer table.
		GridData gridDate = new GridData(GridData.FILL, GridData.FILL, true, true);
		gridDate.horizontalSpan=12;
		Table table = new Table(composite, SWT.SINGLE | SWT.BORDER | SWT.FULL_SELECTION);
		table.setLayoutData(gridDate);
		table.setHeaderVisible(true);
		table.setLinesVisible(true);
		for(int i = 0; i < columnNames.length; i++) {
			TableColumn column = new TableColumn(table, SWT.NONE);
			column.setText(columnNames[i]);
			column.setWidth(80);
		}
		return composite;
	}
	
	public void bind() {
		createBtn.addMouseListener(new MouseAdapter() {
			public void mouseDown(MouseEvent e) {
				CreateCustomerTabView custView = new CreateCustomerTabView();
//				custView.getCompositePage(parent, "Window");
			}
		});
	}

	public void refresh() {
		
	}

	public String viewName() {
		return ViewList.manageCustomer;
	}

	public Object getModel(Object obj) {
		// TODO Auto-generated method stub
		return null;
	}

	public void setModel(Object obj) {
		// TODO Auto-generated method stub
		
	}

}
